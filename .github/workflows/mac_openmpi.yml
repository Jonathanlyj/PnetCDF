name: Mac OSX with OpenMPI

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - '**/*.1'
      - '**/*.jpg'
      - '**/*.png'
      - 'docs/*'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - '**/*.1'
      - '**/*.jpg'
      - '**/*.png'
      - 'docs/*'

env:
   MPICH_VERSION: 4.0.2
   HDF5_VERSION: 1.13.3
   NETCDF_VERSION: 4.9.0

jobs:
    build:
      runs-on: macos-13
      timeout-minutes: 60
      steps:
        - uses: actions/checkout@v3
        - name: Set up dependencies
          run: |
            brew instal automake autoconf libtool m4 open-mpi zlib
        - name: Build PnetCDF
          run: |
            cd ${GITHUB_WORKSPACE}
            autoreconf -i
            mkdir -p pnetcdf_output
            ./configure --enable-option-checking=fatal \
                        --enable-profiling \
                        pnc_ac_debug=yes \
                        --enable-burst_buffering \
                        --enable-subfiling \
                        --enable-shared \
                        --enable-thread-safe \
                        --with-pthread \
                        TESTMPIRUN="mpiexec --oversubscribe -n NP" \
                        TESTOUTDIR=${GITHUB_WORKSPACE}/pnetcdf_output
            make -j 8 tests
        - name: Print config.log
          if: ${{ always() }}
          run: |
            cat ${GITHUB_WORKSPACE}/config.log
        - name: make check
          run: |
            make check
        - name: Print test log files
          if: ${{ always() }}
          run: |
            cd ${GITHUB_WORKSPACE}
            fname=`find src test examples benchmarks -type f -name "*.log"`
            for f in $fname ; do \
               bname=`basename $f` ; \
               if test "x$bname" != xconfig.log ; then \
                  echo "-------- dump $f ----------------------------" ; \
                  cat $f ; \
               fi ; \
            done
        - name: make ptests
          run: |
            make ptests
        - name: make distcheck
          run: |
            make distcheck DISTCHECK_CONFIGURE_FLAGS="--silent"
        - name: Cleanup
          if: ${{ always() }}
          run: |
            make -s distclean
            rm -rf ${GITHUB_WORKSPACE}/pnetcdf_output

