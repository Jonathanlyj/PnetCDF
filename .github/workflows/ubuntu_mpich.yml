name: ubuntu_mpich

on:
  push:
    branches: master
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '**.1'
      - 'docs/**'
  pull_request:
    branches: master
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '**.1'
      - 'docs/**'

env:
  HWLOC_XMLFILE: $(pwd)/hwloc.xml

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Set up dependencies
          run: |
            sudo apt-get update
            sudo apt-get install automake autoconf libtool libtool-bin m4
            autoconf --version
            automake --version
            libtool --version
            gcc --version
        - name: Build hwloc
          run: |
            WORKDIR=$(pwd)
            mkdir -p ${WORKDIR}/hwloc
            cd ${WORKDIR}/hwloc
            curl -sLO https://download.open-mpi.org/release/hwloc/v2.7/hwloc-2.7.1.tar.gz
            gzip -dc hwloc-2.7.1.tar.gz | tar -xf -
            cd hwloc-2.7.1
            ./configure --prefix=${WORKDIR}/hwloc \
                        --silent
            make -s LIBTOOLFLAGS=--silent V=1 -j8 install
            make -s distclean
            cd ${WORKDIR}
            ${WORKDIR}/hwloc/bin/lstopo --of xml hwloc.xml
        - name: Build MPICH
          run: |
            WORKDIR=$(pwd)
            mkdir -p ${WORKDIR}/MPICH
            cd ${WORKDIR}/MPICH
            curl -sLO https://www.mpich.org/static/downloads/4.0.2/mpich-4.0.2.tar.gz
            gzip -dc mpich-4.0.2.tar.gz | tar -xf -
            cd mpich-4.0.2
            ./configure --prefix=${WORKDIR}/MPICH \
                        --silent \
                        --enable-fortran \
                        --enable-romio \
                        --with-file-system=ufs \
                        --with-device=ch3:nemesis \
                        --with-hwloc=embedded \
                        --with-pm=hydra \
                        CC=gcc FC=gfortran
            make -s LIBTOOLFLAGS=--silent V=1 -j8 install
            make -s distclean
            cd ${WORKDIR}
        - name: Build PnetCDF
          run: |
            WORKDIR=$(pwd)
            autoreconf -i
            ./configure --enable-option-checking=fatal \
                        --enable-profiling \
                        pnc_ac_debug=yes \
                        --enable-burst_buffering \
                        --enable-subfiling \
                        --enable-shared \
                        --enable-thread-safe \
                        --with-pthread \
                        --with-mpi=${WORKDIR}/MPICH
            make -j 8 tests
        - name: Print config.log
          if: ${{ failure() }}
          run: |
            WORKDIR=$(pwd)
            cat ${WORKDIR}/config.log
        - name: make check
          run: |
            make check
        - name: Print log files
          if: ${{ failure() }}
          run: |
            WORKDIR=$(pwd)
            cat ${WORKDIR}/src/utils/ncvalidator/*.log
            cat ${WORKDIR}/test/*/*.log
        - name: make ptests
          run: |
            WORKDIR=$(pwd)
            echo "----- HWLOC_XMLFILE = $HWLOC_XMLFILE"
            make ptests
        - name: make distcheck
          run: |
            WORKDIR=$(pwd)
            make distcheck DISTCHECK_CONFIGURE_FLAGS="--silent --with-mpi=${WORKDIR}/MPICH"
        - name: Cleanup
          if: ${{ always() }}
          run: |
            make -s distclean
            rm -rf ${WORKDIR}/MPICH

